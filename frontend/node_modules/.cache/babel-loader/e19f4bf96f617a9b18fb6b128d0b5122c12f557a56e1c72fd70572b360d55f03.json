{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/api\";\n\n// ✅ Fetch All Matches (Live + Completed)\nexport const fetchMatches = async () => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/matches/all`);\n  return data.matches;\n};\n\n// ✅ Fetch Only Live Matches\nexport const fetchLiveMatches = async () => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/matches/live`);\n  return data;\n};\n\n// ✅ Fetch Match Details by ID\nexport const fetchMatchDetails = async matchId => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/match/${matchId}`);\n  return data;\n};\n\n// ✅ Place a Bet (User)\nexport const placeBet = async (betData, token) => {\n  const {\n    data\n  } = await axios.post(`${API_URL}/bet/place`, betData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Get User Bets\nexport const getUserBets = async (username, token) => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/bet/${username}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Cancel Bet (Admin)\nexport const cancelBet = async (betId, token) => {\n  const {\n    data\n  } = await axios.delete(`${API_URL}/bet/${betId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Update Bet Status (Admin)\nexport const updateBetStatus = async (betId, status, token) => {\n  const {\n    data\n  } = await axios.put(`${API_URL}/bet/update/${betId}`, {\n    status\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Admin - Get All Bets\nexport const getAllBets = async token => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/admin/bets`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Admin - Get All Users\nexport const getAllUsers = async token => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/admin/users`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Admin - Update Match Result\nexport const updateMatchResult = async (matchId, winner, token) => {\n  const {\n    data\n  } = await axios.post(`${API_URL}/admin/update-result`, {\n    matchId,\n    winner\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ User - Request Credits\nexport const requestCredits = async (amount, token) => {\n  const {\n    data\n  } = await axios.post(`${API_URL}/user/request-credits`, {\n    amount\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Admin - Get All Credit Requests\nexport const getCreditRequests = async token => {\n  const {\n    data\n  } = await axios.get(`${API_URL}/admin/credit-requests`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};\n\n// ✅ Admin - Approve/Reject Credit Request\nexport const updateCreditRequest = async (id, status, reason, token) => {\n  const {\n    data\n  } = await axios.post(`${API_URL}/admin/credit-requests/${id}`, {\n    status,\n    reason\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return data;\n};","map":{"version":3,"names":["axios","API_URL","fetchMatches","data","get","matches","fetchLiveMatches","fetchMatchDetails","matchId","placeBet","betData","token","post","headers","Authorization","getUserBets","username","cancelBet","betId","delete","updateBetStatus","status","put","getAllBets","getAllUsers","updateMatchResult","winner","requestCredits","amount","getCreditRequests","updateCreditRequest","id","reason"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/api/apiService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"/api\";\n\n// ✅ Fetch All Matches (Live + Completed)\nexport const fetchMatches = async () => {\n  const { data } = await axios.get(`${API_URL}/matches/all`);\n  return data.matches;\n};\n\n// ✅ Fetch Only Live Matches\nexport const fetchLiveMatches = async () => {\n  const { data } = await axios.get(`${API_URL}/matches/live`);\n  return data;\n};\n\n// ✅ Fetch Match Details by ID\nexport const fetchMatchDetails = async (matchId) => {\n  const { data } = await axios.get(`${API_URL}/match/${matchId}`);\n  return data;\n};\n\n// ✅ Place a Bet (User)\nexport const placeBet = async (betData, token) => {\n  const { data } = await axios.post(`${API_URL}/bet/place`, betData, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Get User Bets\nexport const getUserBets = async (username, token) => {\n  const { data } = await axios.get(`${API_URL}/bet/${username}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Cancel Bet (Admin)\nexport const cancelBet = async (betId, token) => {\n  const { data } = await axios.delete(`${API_URL}/bet/${betId}`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Update Bet Status (Admin)\nexport const updateBetStatus = async (betId, status, token) => {\n  const { data } = await axios.put(\n    `${API_URL}/bet/update/${betId}`,\n    { status },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return data;\n};\n\n// ✅ Admin - Get All Bets\nexport const getAllBets = async (token) => {\n  const { data } = await axios.get(`${API_URL}/admin/bets`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Admin - Get All Users\nexport const getAllUsers = async (token) => {\n  const { data } = await axios.get(`${API_URL}/admin/users`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Admin - Update Match Result\nexport const updateMatchResult = async (matchId, winner, token) => {\n  const { data } = await axios.post(\n    `${API_URL}/admin/update-result`,\n    { matchId, winner },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return data;\n};\n\n// ✅ User - Request Credits\nexport const requestCredits = async (amount, token) => {\n  const { data } = await axios.post(\n    `${API_URL}/user/request-credits`,\n    { amount },\n    { headers: { Authorization: `Bearer ${token}` } }\n  );\n  return data;\n};\n\n// ✅ Admin - Get All Credit Requests\nexport const getCreditRequests = async (token) => {\n  const { data } = await axios.get(`${API_URL}/admin/credit-requests`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  return data;\n};\n\n// ✅ Admin - Approve/Reject Credit Request\nexport const updateCreditRequest = async (id, status, reason, token) => {\n  const { data } = await axios.post(\n    `${API_URL}/admin/credit-requests/${id}`,\n    { status, reason },\n    { headers: { Authorization: `Bearer ${token}`} },\n  );\n  return data;\n};\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}