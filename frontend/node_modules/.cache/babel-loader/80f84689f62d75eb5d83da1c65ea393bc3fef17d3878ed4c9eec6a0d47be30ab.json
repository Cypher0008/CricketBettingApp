{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // ✅ State Persistence from localStorage\n  const [user, setUser] = useState(() => {\n    return JSON.parse(localStorage.getItem('user')) || null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(() => Boolean(localStorage.getItem('token')));\n  const [isAdmin, setIsAdmin] = useState(() => localStorage.getItem('role') === 'admin');\n\n  // ✅ Load User Profile\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile();\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n\n        // ✅ Save to localStorage for persistence\n        localStorage.setItem('user', JSON.stringify(profile));\n        localStorage.setItem('role', profile.role);\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Refresh Token if expired\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/user/refresh-token`, {\n              refreshToken\n            });\n            const {\n              token,\n              refreshToken: newRefreshToken\n            } = response.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n            await loadUser(); // ✅ Reload user data\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n    if (isAuthenticated) {\n      loadUser();\n    }\n  }, [isAuthenticated]);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const {\n        token,\n        refreshToken,\n        user\n      } = await loginUser({\n        username,\n        password\n      });\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n      localStorage.setItem('user', JSON.stringify(user));\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      await logoutUser();\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"lXnui05xeoVDLFX4oPiBTY/kcWg=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","loginUser","logoutUser","getProfile","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","JSON","parse","localStorage","getItem","isAuthenticated","setIsAuthenticated","Boolean","isAdmin","setIsAdmin","loadUser","console","log","profile","role","setItem","stringify","error","refreshToken","response","post","process","env","REACT_APP_API_URL","token","newRefreshToken","data","refreshError","logout","login","username","password","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  // ✅ State Persistence from localStorage\n  const [user, setUser] = useState(() => {\n    return JSON.parse(localStorage.getItem('user')) || null;\n  });\n\n  const [isAuthenticated, setIsAuthenticated] = useState(() =>\n    Boolean(localStorage.getItem('token'))\n  );\n\n  const [isAdmin, setIsAdmin] = useState(() =>\n    localStorage.getItem('role') === 'admin'\n  );\n\n  // ✅ Load User Profile\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile();\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n\n        // ✅ Save to localStorage for persistence\n        localStorage.setItem('user', JSON.stringify(profile));\n        localStorage.setItem('role', profile.role);\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Refresh Token if expired\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(\n              `${process.env.REACT_APP_API_URL}/api/user/refresh-token`,\n              { refreshToken }\n            );\n\n            const { token, refreshToken: newRefreshToken } = response.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n\n            await loadUser(); // ✅ Reload user data\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n\n    if (isAuthenticated) {\n      loadUser();\n    }\n  }, [isAuthenticated]);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const { token, refreshToken, user } = await loginUser({\n        username,\n        password,\n      });\n\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      await logoutUser();\n\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n      localStorage.removeItem('user');\n\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}