{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile, refreshToken } from '../api/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile(); // ✅ Load user profile from API\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Auto-refresh token if expired\n        const storedRefreshToken = localStorage.getItem('refreshToken');\n        if (storedRefreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const token = await refreshToken(); // ✅ Use existing refreshToken function\n\n            // ✅ Load user after refreshing token\n            if (token) {\n              await loadUser(); // ✅ Reload profile after refreshing token\n            }\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n    loadUser();\n  }, []);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const {\n        token,\n        refreshToken,\n        user\n      } = await loginUser({\n        username,\n        password\n      });\n      setUser({\n        token,\n        username: user.username,\n        role: user.role,\n        phone: user.phone,\n        credits: user.credits\n      });\n\n      // ✅ Store tokens\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ Hook to Access Auth Context\n_s(AuthProvider, \"nCCyvlyNpXtflSI0qu9AkJ2a4fU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n// ✅ Proper Default Export\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","loginUser","logoutUser","getProfile","refreshToken","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","loadUser","console","log","profile","role","error","storedRefreshToken","localStorage","getItem","token","refreshError","logout","login","username","password","phone","credits","setItem","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile, refreshToken } from '../api/authService';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile(); // ✅ Load user profile from API\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Auto-refresh token if expired\n        const storedRefreshToken = localStorage.getItem('refreshToken');\n        if (storedRefreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const token = await refreshToken(); // ✅ Use existing refreshToken function\n\n            // ✅ Load user after refreshing token\n            if (token) {\n              await loadUser(); // ✅ Reload profile after refreshing token\n            }\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const { token, refreshToken, user } = await loginUser({ username, password });\n\n      setUser({\n        token,\n        username: user.username,\n        role: user.role,\n        phone: user.phone,\n        credits: user.credits,\n      });\n\n      // ✅ Store tokens\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// ✅ Hook to Access Auth Context\nexport const useAuth = () => useContext(AuthContext);\n\n// ✅ Proper Default Export\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}