{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [isAuthenticated, setIsAuthenticated] = useState(Boolean(localStorage.getItem('token')));\n  const [isAdmin, setIsAdmin] = useState(() => {\n    const role = localStorage.getItem('role');\n    console.log('Setting initial isAdmin:', role === 'admin');\n    //localStorage.getItem('role') === 'admin'\n    return role === 'admin';\n  });\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile();\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n\n        // ✅ Store to localStorage\n        localStorage.setItem('user', JSON.stringify(profile));\n        localStorage.setItem('role', profile.role);\n        console.log('Profile loaded:', profile);\n        console.log('isAdmin set to:', profile.role === 'admin');\n        //localStorage.setItem('isAdmin', profile.role === 'admin' ? 'true' : 'false');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/user/refresh-token`, {\n              refreshToken\n            });\n            const {\n              token,\n              refreshToken: newRefreshToken\n            } = response.data;\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n            await loadUser(); // ✅ Reload after token refresh\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n    if (localStorage.getItem('token')) {\n      loadUser(); // ✅ Load user on app start\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const {\n        token,\n        refreshToken,\n        user\n      } = await loginUser({\n        username,\n        password\n      });\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n      // localStorage.setItem('isAdmin', user.role === 'admin' ? 'true' : 'false');\n      localStorage.setItem('user', JSON.stringify(user));\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n      localStorage.clear();\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bEwkdQV08P2fCf/00kxoSEUNjlQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","loginUser","logoutUser","getProfile","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","isAuthenticated","setIsAuthenticated","Boolean","isAdmin","setIsAdmin","role","console","log","loadUser","profile","setItem","stringify","error","refreshToken","response","post","process","env","REACT_APP_API_URL","token","newRefreshToken","data","refreshError","logout","login","username","password","clear","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n\n  const [isAuthenticated, setIsAuthenticated] = useState(\n    Boolean(localStorage.getItem('token'))\n  );\n\n  const [isAdmin, setIsAdmin] = useState(()=> {\n    const role = localStorage.getItem('role');\n    console.log('Setting initial isAdmin:', role === 'admin');\n    //localStorage.getItem('role') === 'admin'\n  return role === 'admin';\n  });\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile();\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n\n        // ✅ Store to localStorage\n        localStorage.setItem('user', JSON.stringify(profile));\n        localStorage.setItem('role', profile.role);\n\n        console.log('Profile loaded:', profile);\n        console.log('isAdmin set to:', profile.role === 'admin');\n        //localStorage.setItem('isAdmin', profile.role === 'admin' ? 'true' : 'false');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(\n              `${process.env.REACT_APP_API_URL}/api/user/refresh-token`,\n              { refreshToken }\n            );\n\n            const { token, refreshToken: newRefreshToken } = response.data;\n\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n\n            await loadUser(); // ✅ Reload after token refresh\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n\n    if (localStorage.getItem('token')) {\n      loadUser(); // ✅ Load user on app start\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const { token, refreshToken, user } = await loginUser({ username, password });\n\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin');\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n     // localStorage.setItem('isAdmin', user.role === 'admin' ? 'true' : 'false');\n      localStorage.setItem('user', JSON.stringify(user));\n\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n\n      localStorage.clear();\n\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}