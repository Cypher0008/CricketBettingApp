{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL + '/api/user'; // ✅ Fix URL\n\n// ✅ Register User\nexport const register = async userData => {\n  console.log('Sending registration payload:', userData); // ✅ Debugging\n  const {\n    data\n  } = await axios.post(`${API_URL}/register`, userData);\n  return data;\n};\n\n// ✅ Login User\nexport const loginUser = async userData => {\n  console.log('Sending login payload:', userData); // ✅ Debugging\n  const {\n    data\n  } = await axios.post(`${API_URL}/login`, userData);\n  localStorage.setItem('token', data.token);\n  return data;\n};\n\n// ✅ Logout User\nexport const logoutUser = async () => {\n  console.log('Sending logout request'); // ✅ Debugging\n  await axios.post(`${API_URL}/logout`, null, {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    }\n  });\n  localStorage.removeItem('token');\n};\n\n// ✅ Get User Profile\nexport const getProfile = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) throw new Error('No token found');\n  console.log('Fetching user profile');\n  const {\n    data\n  } = await axios.get(`${API_URL}/profile`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log('Profile loaded:', data);\n  return data;\n};\n\n// ✅ Request Credits\nexport const requestCredits = async amount => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.post(`${API_URL}/request-credits`, {\n      amount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to request credits\";\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","register","userData","console","log","data","post","loginUser","localStorage","setItem","token","logoutUser","headers","Authorization","getItem","removeItem","getProfile","Error","get","requestCredits","amount","error","_error$response","_error$response$data","response"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/api/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL + '/api/user'; // ✅ Fix URL\n\n// ✅ Register User\nexport const register = async (userData) => {\n  console.log('Sending registration payload:', userData); // ✅ Debugging\n  const { data } = await axios.post(`${API_URL}/register`, userData);\n  return data;\n};\n\n// ✅ Login User\nexport const loginUser = async (userData) => {\n  console.log('Sending login payload:', userData); // ✅ Debugging\n  const { data } = await axios.post(`${API_URL}/login`, userData);\n  localStorage.setItem('token', data.token);\n  return data;\n};\n\n// ✅ Logout User\nexport const logoutUser = async () => {\n  console.log('Sending logout request'); // ✅ Debugging\n  await axios.post(`${API_URL}/logout`, null, {\n    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n  });\n  localStorage.removeItem('token');\n};\n\n// ✅ Get User Profile\nexport const getProfile = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) throw new Error('No token found');\n\n  console.log('Fetching user profile');\n  const { data } = await axios.get(`${API_URL}/profile`, {\n    headers: { Authorization: `Bearer ${token}` },\n  });\n  console.log('Profile loaded:', data);\n  return data;\n};\n\n// ✅ Request Credits\nexport const requestCredits = async (amount) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const { data } = await axios.post(\n      `${API_URL}/request-credits`,\n      { amount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return data;\n  } catch (error) {\n    throw error.response?.data?.error || \"Failed to request credits\";\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,WAAW,CAAC,CAAC;;AAE7D;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1CC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC,CAAC,CAAC;EACxD,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAEK,QAAQ,CAAC;EAClE,OAAOG,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAME,SAAS,GAAG,MAAOL,QAAQ,IAAK;EAC3CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,QAAQ,EAAEK,QAAQ,CAAC;EAC/DM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC;EACzC,OAAOL,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpCR,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC;EACvC,MAAMR,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,SAAS,EAAE,IAAI,EAAE;IAC1Ce,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAAG;EACtE,CAAC,CAAC;EACFN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMN,KAAK,GAAGF,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACJ,KAAK,EAAE,MAAM,IAAIO,KAAK,CAAC,gBAAgB,CAAC;EAE7Cd,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMT,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,UAAU,EAAE;IACrDe,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;EACFP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,IAAI,CAAC;EACpC,OAAOA,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMc,cAAc,GAAG,MAAOC,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMV,KAAK,GAAGF,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAM;MAAET;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,GAAGT,OAAO,kBAAkB,EAC5B;MAAEuB;IAAO,CAAC,EACV;MAAER,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAAE,CAClD,CAAC;IACD,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOgB,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBjB,IAAI,cAAAkB,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,2BAA2B;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}