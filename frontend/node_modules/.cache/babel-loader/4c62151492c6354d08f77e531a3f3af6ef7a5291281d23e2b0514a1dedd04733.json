{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) return;\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/user/profile`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setUser(response.data);\n        setIsAuthenticated(true);\n        setIsAdmin(response.data.role === 'admin');\n      } catch (error) {\n        console.error(\"Failed to load user profile:\", error);\n        setIsAuthenticated(false);\n      }\n    };\n    loadUser();\n  }, []);\n  const login = async (username, password) => {\n    const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/user/login`, {\n      username,\n      password\n    });\n    const {\n      token,\n      refreshToken,\n      user\n    } = response.data;\n    setUser({\n      token,\n      username: user.username,\n      role: user.role,\n      phone: user.phone,\n      credits: user.credits\n    });\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n    localStorage.setItem(\"role\", user.role);\n  };\n  const logout = async () => {\n    try {\n      console.log('Sending logout request'); // ✅ Debugging\n      await logoutUser();\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"nCCyvlyNpXtflSI0qu9AkJ2a4fU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","loginUser","logoutUser","getProfile","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","loadUser","token","localStorage","getItem","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","role","error","console","login","username","password","post","refreshToken","phone","credits","setItem","logout","log","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    const loadUser = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/user/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    setUser(response.data);\n    setIsAuthenticated(true);\n    setIsAdmin(response.data.role === 'admin');\n  } catch (error) {\n    console.error(\"Failed to load user profile:\", error);\n    setIsAuthenticated(false);\n  }\n};\n\n    loadUser();\n  }, []);\n\n\nconst login = async (username, password) => {\n  const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/user/login`, { username, password });\n  const { token, refreshToken, user } = response.data;\n\n  setUser({\n  token,\n  username: user.username,\n  role: user.role,\n  phone: user.phone,\n  credits: user.credits,\n  });\n\n  localStorage.setItem(\"token\", token);\n  localStorage.setItem(\"refreshToken\", refreshToken);\n  localStorage.setItem(\"role\", user.role);\n};\n\n\n\n  const logout = async () => {\n    try {\n      console.log('Sending logout request'); // ✅ Debugging\n      await logoutUser();\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}