{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(localStorage.getItem('role') === 'admin' // ✅ Persist admin state on reload\n  );\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile(); // ✅ Load user profile from API\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Auto-refresh token if expired\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/user/refresh-token`, {\n              refreshToken\n            });\n            const {\n              token,\n              refreshToken: newRefreshToken\n            } = response.data;\n\n            // ✅ Store new tokens\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n            await loadUser(); // ✅ Reload profile after refreshing token\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n    loadUser();\n  }, []);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const {\n        token,\n        refreshToken,\n        user\n      } = await loginUser({\n        username,\n        password\n      });\n\n      // ✅ Set state correctly\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin'); // ✅ Update isAdmin correctly\n\n      // ✅ Store tokens in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isAuthenticated,\n      isAdmin,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n// ✅ Hook to Access Auth Context\n_s(AuthProvider, \"67E4p305GB06n74MdDTAnD4Wfag=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","loginUser","logoutUser","getProfile","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","localStorage","getItem","loadUser","console","log","profile","role","error","refreshToken","response","post","process","env","REACT_APP_API_URL","token","newRefreshToken","data","setItem","refreshError","logout","login","username","password","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, logoutUser, getProfile } from '../api/authService';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(\n    localStorage.getItem('role') === 'admin' // ✅ Persist admin state on reload\n  );\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        console.log('Fetching user profile...');\n        const profile = await getProfile(); // ✅ Load user profile from API\n        setUser(profile);\n        setIsAuthenticated(true);\n        setIsAdmin(profile.role === 'admin');\n      } catch (error) {\n        console.error('Failed to load user profile:', error);\n        setIsAuthenticated(false);\n\n        // ✅ Auto-refresh token if expired\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          try {\n            console.log('Refreshing token...');\n            const response = await axios.post(\n              `${process.env.REACT_APP_API_URL}/api/user/refresh-token`,\n              { refreshToken }\n            );\n\n            const { token, refreshToken: newRefreshToken } = response.data;\n\n            // ✅ Store new tokens\n            localStorage.setItem('token', token);\n            localStorage.setItem('refreshToken', newRefreshToken);\n\n            await loadUser(); // ✅ Reload profile after refreshing token\n          } catch (refreshError) {\n            console.error('Token refresh failed:', refreshError);\n            logout(); // ✅ Logout if refresh fails\n          }\n        }\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  // ✅ Login Function\n  const login = async (username, password) => {\n    try {\n      console.log('Submitting login request...');\n      const { token, refreshToken, user } = await loginUser({ username, password });\n\n      // ✅ Set state correctly\n      setUser(user);\n      setIsAuthenticated(true);\n      setIsAdmin(user.role === 'admin'); // ✅ Update isAdmin correctly\n\n      // ✅ Store tokens in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      localStorage.setItem('role', user.role);\n\n      console.log('Login successful!');\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  // ✅ Logout Function\n  const logout = async () => {\n    try {\n      console.log('Sending logout request...');\n      await logoutUser();\n\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('role');\n\n      setUser(null);\n      setIsAuthenticated(false);\n      setIsAdmin(false);\n\n      console.log('Logged out successfully');\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, isAuthenticated, isAdmin, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// ✅ Hook to Access Auth Context\nexport const useAuth = () => useContext(AuthContext);\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}