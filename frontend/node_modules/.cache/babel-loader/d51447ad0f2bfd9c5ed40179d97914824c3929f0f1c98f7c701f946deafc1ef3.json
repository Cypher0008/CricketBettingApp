{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"/api/user\";\n\n// ✅ Register User\nexport const registerUser = async (username, phone, password) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${API_URL}/register`, {\n      username,\n      phone,\n      password\n    });\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Registration failed\";\n  }\n};\n\n// ✅ Login User\nexport const loginUser = async (username, password) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${API_URL}/login`, {\n      username,\n      password\n    });\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n    }\n    return data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Login failed\";\n  }\n};\n\n// ✅ Logout User\nexport const logoutUser = async () => {\n  try {\n    await axios.post(`${API_URL}/logout`);\n    localStorage.removeItem(\"token\");\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Logout failed\";\n  }\n};\n\n// ✅ Get User Profile\nexport const getProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) throw new Error(\"No token found\");\n    const {\n      data\n    } = await axios.get(`${API_URL}/profile`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || \"Failed to load profile\";\n  }\n};\n\n// ✅ Request Credits\nexport const requestCredits = async amount => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const {\n      data\n    } = await axios.post(`${API_URL}/request-credits`, {\n      amount\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || \"Failed to request credits\";\n  }\n};","map":{"version":3,"names":["axios","API_URL","registerUser","username","phone","password","data","post","error","_error$response","_error$response$data","response","loginUser","token","localStorage","setItem","_error$response2","_error$response2$data","logoutUser","removeItem","_error$response3","_error$response3$data","getProfile","getItem","Error","get","headers","Authorization","_error$response4","_error$response4$data","requestCredits","amount","_error$response5","_error$response5$data"],"sources":["/Users/vaibhavsrivastava/Desktop/cricket-betting-platform/frontend/src/api/authService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"/api/user\";\n\n// ✅ Register User\nexport const registerUser = async (username, phone, password) => {\n  try {\n    const { data } = await axios.post(`${API_URL}/register`, {\n      username,\n      phone,\n      password,\n    });\n    return data;\n  } catch (error) {\n    throw error.response?.data?.error || \"Registration failed\";\n  }\n};\n\n// ✅ Login User\nexport const loginUser = async (username, password) => {\n  try {\n    const { data } = await axios.post(`${API_URL}/login`, {\n      username,\n      password,\n    });\n\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n    }\n    return data;\n  } catch (error) {\n    throw error.response?.data?.error || \"Login failed\";\n  }\n};\n\n// ✅ Logout User\nexport const logoutUser = async () => {\n  try {\n    await axios.post(`${API_URL}/logout`);\n    localStorage.removeItem(\"token\");\n  } catch (error) {\n    throw error.response?.data?.error || \"Logout failed\";\n  }\n};\n\n// ✅ Get User Profile\nexport const getProfile = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) throw new Error(\"No token found\");\n\n    const { data } = await axios.get(`${API_URL}/profile`, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return data;\n  } catch (error) {\n    throw error.response?.data?.error || \"Failed to load profile\";\n  }\n};\n\n// ✅ Request Credits\nexport const requestCredits = async (amount) => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    const { data } = await axios.post(\n      `${API_URL}/request-credits`,\n      { amount },\n      { headers: { Authorization: `Bearer ${token}` } }\n    );\n    return data;\n  } catch (error) {\n    throw error.response?.data?.error || \"Failed to request credits\";\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}